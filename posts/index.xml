<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ravin Poudel</title>
    <link>https://ravinpoudel.github.io/posts/</link>
    <description>Recent content in Posts on Ravin Poudel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2017 Ravin Poudel</copyright>
    <lastBuildDate>Mon, 22 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ravinpoudel.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating HPC cluster in AWS with Slurm Workload Manager (SLURM) </title>
      <link>https://ravinpoudel.github.io/posts/aws-slurm/</link>
      <pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ravinpoudel.github.io/posts/aws-slurm/</guid>
      <description>AWS ParallelCluster- Slurm Workload Manager # Create a conda env and install awscli üôè Ravin$ conda create -n awscli üôè Ravin$ conda activate awscli (awscli) üôè Ravin$ conda install -c conda-forge awscli # configure aws with your credentials (awscli) üôè Ravin$ aws configure AWS Access Key ID : *************** AWS Secret Access Key :***************** Default region name [us-east-1]: us-east-1 Default output format [None]: # Some of the features of aws cli (awscli) üôè Ravin$ aws iam help (awscli) üôè Ravin$ aws iam list-users (awscli) üôè Ravin$ aws iam get-user (awscli) üôè Ravin$ aws s3 ls # install aws-parallelcluster (awscli) üôè Ravin$ conda install -c conda-forge aws-parallelcluster More information on aws-parallelcluster.</description>
    </item>
    
    <item>
      <title>Is ability to detect a gene a function of seqencing depth?</title>
      <link>https://ravinpoudel.github.io/posts/seqencing-depth/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ravinpoudel.github.io/posts/seqencing-depth/</guid>
      <description>Here you can find approaches to:
i) Sampling a fasta file randomly with replacement ii) Example of creating a HMM profile for gene iii) Search genes predicted from a genome against HMM profiles  Tools/Program used:: prodigal
Prodigal (Prokaryotic Dynamic Programming Genefinding Algorithm) is a microbial (bacterial and archaeal) is a gene/ORF finding program.
hmmer
Hmmer provides tools for making probabilistic models of protein and DNA sequence domain families ‚Äìcalled profile hidden Markov models, profile HMMs, or just profiles ‚Äì and for using these profiles to annotate new sequences, to search sequence databases for additional homologs, and to make deep multiple sequence alignments.</description>
    </item>
    
    <item>
      <title>Designing a targeted panel - for Clinical Genomics</title>
      <link>https://ravinpoudel.github.io/posts/exome_gene_panel/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ravinpoudel.github.io/posts/exome_gene_panel/</guid>
      <description>Question/Task:: Clinical Genomics Design a targeted panel for sequencing all coding exons of human genes BRCA1 and BRCA2 (HGNC names given), and provide genomic coordinate ranges (as a BED- format file) that encompass all bases in those coding exons to the panel manufacturer. The ranges must be disjoint (no overlap, and at least one genomic base must separate adjacent intervals). Such output will be used by the manufacturer to design PCR primer pairs that amplify these targets out of genomic DNA for downstream NGS.</description>
    </item>
    
    <item>
      <title>Extract specific sequences from a big FASTA file</title>
      <link>https://ravinpoudel.github.io/posts/randomgenome_access/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ravinpoudel.github.io/posts/randomgenome_access/</guid>
      <description>Question &amp;ndash; How to extract specific sequences from a big FASTA file? Getting random access to a fasta or sequene file is often needed for bioinformatics analyses. Multiple random access to a large fasta file could slow the process a lot. Compute time is worst with the fasta file of large size. Following are some of the techniques that could be useful, depending upon the size of fasta file- from few mb to few gb.</description>
    </item>
    
    <item>
      <title>Metagenomics tutorial</title>
      <link>https://ravinpoudel.github.io/posts/metagenomics/</link>
      <pubDate>Sun, 16 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ravinpoudel.github.io/posts/metagenomics/</guid>
      <description>Welcome to metagenomics tutorial !!! These tutorials walk you through the process of analyzing shotgun metagenomics data. We will cover:
 Assembly Based Metagenomics Read Based Metagenomics  Assembly Based Metagenomics Assembling reads into contigs and mapping reads to the assembled contigs are the primary steps in assembly-based metagenomics. This tutorial walks you through the various steps involved in the process of genome assembly and mapping.
Step 1: Quality Check Prior to genome assembly, reads are cleaned using a custom ARS-RQC pipeline, which utilizes a suite of functions from BBtools to remove host genome contamination and trim the standard Illumina barcodes.</description>
    </item>
    
    <item>
      <title>Job Submission on HPCs</title>
      <link>https://ravinpoudel.github.io/posts/hpc/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ravinpoudel.github.io/posts/hpc/</guid>
      <description>Request resource for development environment
#!/bin/bash  module load ufrc module load slurm srundev --account=epi --qos=epi-b --time=02:00:00 Download files from online sequence repository- vendor
#!/bin/sh #SBATCH -p hpg1-compute #SBATCH --account=epi #SBATCH --qos=epi #SBATCH --job-name=fastspar #SBATCH --mail-type=ALL #SBATCH --mail-user=rp3448@ufl.edu #SBATCH --ntasks=1 #SBATCH --mem=2gb #SBATCH --time=72:00:00 date;hostname;pwd wget --user=ravin --password=????????? http://hwwgenotyping.ksu.edu/data/ravin/2017/FLB2017AM-GBS_001-3_job319/AAAA-FLB2017_1_1.fastq ## ??????? == password Basic job script
#!/bin/sh #SBATCH -p hpg1-compute #SBATCH --account=epi #SBATCH --qos=epi-b #SBATCH --job-name=mothur_NCBI #SBATCH --mail-type=ALL #SBATCH --mail-user=rp3448@ufl.edu #SBATCH --ntasks=1 #SBATCH --cpus-per-task=48 #SBATCH --mem=64gb #SBATCH --time=04:00:00 date;hostname;pwd # load the required programs module load mothur mothur GetFastQs_Ravin_bac2014.</description>
    </item>
    
    <item>
      <title>Managing conda environment</title>
      <link>https://ravinpoudel.github.io/posts/conda/</link>
      <pubDate>Sat, 15 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ravinpoudel.github.io/posts/conda/</guid>
      <description>Conda is a general-purpose package and environment management system that allows to install, run, and update packages and their dependencies very efficiently. Besides, creating an environment using conda or miniconda in remote computer will enable one to install and manage softwares without need of sudo power. I usually create one conda environment for one research project, similar concept as creating a Rproject - if you are familiar to R programming, so that I can generate a summary file listing all the packages and their version used for a project or analyses.</description>
    </item>
    
    <item>
      <title>Microbiome Network in R</title>
      <link>https://ravinpoudel.github.io/posts/microbiomenetwork_narrative/</link>
      <pubDate>Thu, 12 Oct 2017 12:00:00 +0000</pubDate>
      
      <guid>https://ravinpoudel.github.io/posts/microbiomenetwork_narrative/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Little Tricks in R</title>
      <link>https://ravinpoudel.github.io/posts/dirty_little_tricks/</link>
      <pubDate>Mon, 10 Jul 2017 12:00:00 +0000</pubDate>
      
      <guid>https://ravinpoudel.github.io/posts/dirty_little_tricks/</guid>
      <description>Following are some of dirty little tricks (DLTs) in R that I have compiled through-out the years.</description>
    </item>
    
    <item>
      <title>Getting started with the version control </title>
      <link>https://ravinpoudel.github.io/posts/local_git/</link>
      <pubDate>Mon, 22 May 2017 12:00:00 +0000</pubDate>
      
      <guid>https://ravinpoudel.github.io/posts/local_git/</guid>
      <description>If you wondering how to keep versions of your code, writing, or anything else&amp;hellip; then here is a short guide that might quench your desire.</description>
    </item>
    
    <item>
      <title>myFunctions: R Package</title>
      <link>https://ravinpoudel.github.io/posts/myfunctions/</link>
      <pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ravinpoudel.github.io/posts/myfunctions/</guid>
      <description>myFunctions is a R package that I am developing, and currently at very-very early version (v = 0.00000001, Let say). Although I have a long road to go for making a highly useful Package, I find this approach an excellent to self-organize the code. Additionally, this will also save time, as you will not have to write the same functions multiple times. If you find them useful, please feel free to use.</description>
    </item>
    
    <item>
      <title>Migrate your R code to remote git server</title>
      <link>https://ravinpoudel.github.io/posts/r-and-git_control/</link>
      <pubDate>Mon, 10 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ravinpoudel.github.io/posts/r-and-git_control/</guid>
      <description>Steps to link R working directory with the remote server</description>
    </item>
    
    <item>
      <title>UNIX/Linux One Liner for Bioinformatics</title>
      <link>https://ravinpoudel.github.io/posts/unixoneliner/</link>
      <pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://ravinpoudel.github.io/posts/unixoneliner/</guid>
      <description>Some of the handy UNIX/Linux one liner for bioinformatics.
# Find all the file name with specific pattern and copy to a folder find data/ -type f -name &amp;#34;S[0-9]*.tsv&amp;#34; | xargs -i cp {} sparccOutput/ # Find any files with particular pattern inside all directories grep --recursive --ignore-case --files-with-matches &amp;#34;CANCELLED&amp;#34; Root_RST-04-106/ # Count the number of files within a folder. ls -F |grep -v / | wc -l # List just the names of matching files grep -l &amp;#39;main&amp;#39; *.</description>
    </item>
    
    <item>
      <title>Traveling to Nepal provides spectacles</title>
      <link>https://ravinpoudel.github.io/posts/nepal/</link>
      <pubDate>Mon, 20 Sep 2010 12:00:00 +0000</pubDate>
      
      <guid>https://ravinpoudel.github.io/posts/nepal/</guid>
      <description>Nepal is a land where the nature merges with culture and the base of religion is reflected in the art and architecture.</description>
    </item>
    
  </channel>
</rss>